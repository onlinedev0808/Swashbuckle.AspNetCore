<Project Sdk="Microsoft.NET.Sdk.Web">

  <PropertyGroup>
    <TargetFramework>netcoreapp2.1</TargetFramework>
  </PropertyGroup>

  <ItemGroup>
    <Content Remove="dotnet-tools.json" />
  </ItemGroup>

  <ItemGroup>
    <EmbeddedResource Include="dotnet-tools.json">
      <Generator>MSBuild:Compile</Generator>
    </EmbeddedResource>
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.AspNetCore.All" />
  </ItemGroup>

  <ItemGroup>
    <ProjectReference Include="..\..\..\src\Swashbuckle.AspNetCore.SwaggerGen\Swashbuckle.AspNetCore.SwaggerGen.csproj" />
    <ProjectReference Include="..\..\..\src\Swashbuckle.AspNetCore.SwaggerUI\Swashbuckle.AspNetCore.SwaggerUI.csproj" />
    <ProjectReference Include="..\..\..\src\Swashbuckle.AspNetCore.Swagger\Swashbuckle.AspNetCore.Swagger.csproj" />
    <ProjectReference Include="..\..\..\src\Swashbuckle.AspNetCore.Cli\Swashbuckle.AspNetCore.Cli.csproj" />
  </ItemGroup>

  <!--
    NOTE: In practice, you would uncomment the following snippet to install the dotnet-swagger tool via Nuget.
    Then, the exec command below could be simplified to the following "dotnet tool run swagger tofile ..."
  -->

  <!--
  <Target Name="SwaggerToFile" AfterTargets="AfterBuild">
    <Exec Command="dotnet tool run swagger tofile &#45;-host http://example.com &#45;-output wwwroot/api-docs/v1/swagger.json &quot;$(TargetPath)&quot; v1" />
  </Target>
  -->

  <!--
    NOTE: If you install swagger as global tool then you could run simply "swagger tofile ..."
  -->
  <!--
  <Target Name="SwaggerToFile" AfterTargets="AfterBuild">
    <Exec Command="swagger tofile &#45;-host http://example.com &#45;-output wwwroot/api-docs/v1/swagger.json &quot;$(TargetPath)&quot; v1" />
  </Target>
  -->
</Project>